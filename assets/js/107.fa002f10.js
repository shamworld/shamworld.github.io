(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{408:function(a,t,e){"use strict";e.r(t);var s=e(12),p=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"webpack从入门到精通-一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack从入门到精通-一"}},[a._v("#")]),a._v(" webpack从入门到精通(一)")]),a._v(" "),t("h2",{attrs:{id:"webpack的认识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack的认识"}},[a._v("#")]),a._v(" webpack的认识")]),a._v(" "),t("p",[a._v("我们平时用vue脚手架自动生成项目，但是它最主要的webpack是怎么搭建的，怎么编译的，估计很少有人去关注，我记录一下我自己学习webpack的一些记录和见解。")]),a._v(" "),t("p",[a._v("首先，什么是webpack？")]),a._v(" "),t("p",[a._v("webpack是一个模块打包工具，通过依赖处理模块，并生成那些模块静态资源。")]),a._v(" "),t("p",[a._v("我们先看一张图:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/20150802170155415.png",alt:""}})]),a._v(" "),t("p",[a._v("通过这张图我们可以看出webpack的一些功能:")]),a._v(" "),t("ul",[t("li",[a._v("能够把各种资源，例如JS，coffe，样式(含less/sass)，图片等作为模块来使用和处理。")]),a._v(" "),t("li",[a._v("能有Grunt和Gulp所有的基本功能，比如打包，压缩混淆，图片转base64等等，将less，sass编译成css文件。")]),a._v(" "),t("li",[a._v("解决大型项目初始化加载慢的问题，能够在大型项目中运用。")]),a._v(" "),t("li",[a._v("每一个静态文件都可以成为一个模块。")]),a._v(" "),t("li",[a._v("可以整合第三方库。")]),a._v(" "),t("li",[a._v("可以通过node在浏览器里直接使用。")])]),a._v(" "),t("h2",{attrs:{id:"使用webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack"}},[a._v("#")]),a._v(" 使用webpack")]),a._v(" "),t("p",[a._v("1.安装webpck配置npm init初始化生成package.json文件，需要填写相关项目信息，而通过npm init -y 可以生成一个默认的，如图:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602428407933.jpg",alt:""}})]),a._v(" "),t("p",[a._v("2.npm install -g webpack全局安装webpack(不推荐全局安装，npm install webpack webpack-cli -D后跳过步奏3和4)")]),a._v(" "),t("p",[a._v("3.npm install webpack --save 通过npm把webpack的依赖导入项目中")]),a._v(" "),t("p",[a._v("4.4.x的版本把cli分离出来了，所以必需安装webpack-cli npm install --save-dev webpack-cli  或者 npm install -D webpack-cli")]),a._v(" "),t("p",[a._v("5.验证是否安装成功：webpack -v，如果出现下面报错")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/20200311163423341.png",alt:""}})]),a._v(" "),t("p",[a._v("执行一下 npm install -g webpack-cli")]),a._v(" "),t("h2",{attrs:{id:"配置文件的认识"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置文件的认识"}},[a._v("#")]),a._v(" 配置文件的认识")]),a._v(" "),t("p",[a._v("webpack的工作都是通过配置文件来完成的。编译哪个文件，怎么编译，编译成什么样，输出为什么等等，所有的操作都是按照配置文件里面的内容来完成的，webpack想要运行的话配置文件是必不可少的东西。通常我们都是在webpack.config.js文件进行配置，才用CommonJS规范，用module.exports导出。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var config = {\n    entry: [\n    ],\n    output: {\n    },\n    devServer:{\n        port:3000,\n        progress:true,\n        contentBase:'./build',\n        compress:true,\n    },\n    mode:'',\n    resolve: {\n    },\n    module: {\n    },\n    plugins: [\n    ]\n}\n")])])]),t("ul",[t("li",[a._v("entry:入口，定义要打包的文件")]),a._v(" "),t("li",[a._v("output:出口，定义打包输出的文件；包括路径，文件名，还可能有运行时的访问路径(publickPath)参数")]),a._v(" "),t("li",[a._v("devServer:开发服务器的配置")]),a._v(" "),t("li",[a._v("mode:模式，默认两种模式 production development")]),a._v(" "),t("li",[a._v("module:webpack将所有资源都看做一个模块，而模块就需要加载器")]),a._v(" "),t("li",[a._v("resolve:能够呗打包的文件，文件后缀名")]),a._v(" "),t("li",[a._v("plugins:定义以下额外的插件")])]),a._v(" "),t("h2",{attrs:{id:"小测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小测试"}},[a._v("#")]),a._v(" 小测试")]),a._v(" "),t("p",[a._v("创建一个demo，结构如下:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602429814485.jpg",alt:""}})]),a._v(" "),t("p",[a._v("在index.html代码如下:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <title>webpack学习</title>\n</head>\n<body>\n    <div id="box">\n\n    </div>\n</body>\n</html>\n')])])]),t("p",[a._v("js文件夹下面创建一个index.js，里面代码如下:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("window.onload = ()=>{\n\tconst box = document.getElementById('box');\n\tbox.innerHTML = 'webpack学习！！！';\n}\n")])])]),t("p",[a._v("webpack.config.js代码如下:")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("const path = require('path'); //nodejs的语法，引入路径模块，为了输出的时候找绝对路径\n \nmodule.exports = {\n\tentry: './js/index.js', //入口文件为main.js  \n\toutput: { //输出\n\t\tpath: path.resolve(__dirname, 'dist'), //path.resolve为nodejs的固定语法，用于找到当前文件的绝对路径\n\t\tfilename: 'bundle.js' //输出的文件名\n\t},\n}\n")])])]),t("p",[a._v("执行webpack后:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602430442150.jpg",alt:""}})]),a._v(" "),t("p",[a._v("然后在目录中我们可以看到生成了一个dist目录，下面有一个bundle.js文件")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602430558640.jpg",alt:""}})]),a._v(" "),t("p",[a._v("在index.html里面引入dist目录下的bundle.js，并运行后结果如下:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602430880012.jpg",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"语法糖和步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法糖和步骤"}},[a._v("#")]),a._v(" 语法糖和步骤")]),a._v(" "),t("p",[a._v("官网文档 https://www.webpackjs.com/concepts/entry-points/")]),a._v(" "),t("p",[a._v("1.入口文件   "),t("code",[a._v("entry: string|Array<string>| {[entryChunkName: string]: string|Array<string>}")])]),a._v(" "),t("ul",[t("li",[a._v("只打包一个文件（单入口），写个字符串")]),a._v(" "),t("li",[a._v("把多个文件打包成一个文件，写个数组")]),a._v(" "),t("li",[a._v("把多个文件分别打包成多个文件，写成对象")]),a._v(" "),t("li",[a._v("webpack把打包后的文件叫Chunck")])]),a._v(" "),t("p",[a._v("2.出口文件 output 配置 output 选项可以控制 webpack 如何向硬盘写入编译文件。注意，即使可以存在多个入口起点，但只指定一个输出配置")]),a._v(" "),t("ul",[t("li",[a._v("filename  用于输出文件的文件名。字符串")]),a._v(" "),t("li",[a._v("目标输出目录 path 的绝对路径。 __dirname是nodejs里的一个模块，表示当前文件的绝对路径 通过引入path模块 通过resolve来定义绝对路径  path.resolve(__dirname,'输出文件的路径');")])]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1608540564030.jpg",alt:""}})]),a._v(" "),t("h2",{attrs:{id:"多文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多文件"}},[a._v("#")]),a._v(" 多文件")]),a._v(" "),t("p",[a._v("目录的话 就是在JS文件夹里多添加了一个文件two.js文件:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602432294713.jpg",alt:""}})]),a._v(" "),t("p",[a._v("webpack.config.js里面写法如下:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602432390148.jpg",alt:""}})]),a._v(" "),t("p",[a._v("可以看出webpack会把数组里面的所有文件打包成一个js文件:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602432526926.jpg",alt:""}})]),a._v(" "),t("p",[a._v("对象格式写法:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602432628492.jpg",alt:""}})]),a._v(" "),t("p",[a._v("webpack会把对象里的文件分别打包成多个文件:")]),a._v(" "),t("p",[t("img",{attrs:{src:"/webpacks/1602432688926.jpg",alt:""}})])])}),[],!1,null,null,null);t.default=p.exports}}]);